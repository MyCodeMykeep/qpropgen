// {{ autogenerated_disclaimer }}
{% set include_guard = header.replace('.', '_').upper() %}
#ifndef {{ include_guard }}
#define {{ include_guard }}

#include <QObject>

{%- for include in includes %}
#include {{include}}
{%- endfor %}

class {{ className }} : public {{ baseClassName }} {
    Q_OBJECT
{% for property in properties %}
    Q_PROPERTY({{ property.type }} {{ property.name }} READ {{ property.name }}
    {%- if property.mutability == 'readwrite' %}
            WRITE {{ property.setterName }}
    {%- endif %}
    {%- if property.mutability == 'constant' %}
            CONSTANT
    {%- else %}
            NOTIFY {{ property.name}}Changed
    {%- endif %}
    )
{% endfor %}

public:
    // 单例访问接口
    static {{ className }}* instance() {
        static {{ className }} _instance;
        return &_instance;
    }

    // 禁止拷贝和移动
    {{ className }}(const {{ className }}&) = delete;
    {{ className }}& operator=(const {{ className }}&) = delete;
    {{ className }}({{ className }}&&) = delete;
    {{ className }}& operator=({{ className }}&&) = delete;

private:
    explicit {{ className }}(QObject* parent = nullptr);

public:
{% for property in properties %}
    {{ property.declaration_prefix }} {{ property.type }} {{ property.name }}() const {{- property.declaration_suffix }};
    {%- if property.mutability == 'readwrite' %}
    {{ property.declaration_prefix }} void {{property.setterName }}({{ property.argType }} value) {{- property.declaration_suffix }};
    {%- endif %}
{% endfor %}

signals:
{% for property in properties if property.mutability != 'constant' %}
    void {{property.name }}Changed({{ property.argType }} {{ property.name }});
{% endfor %}

protected:
{%- for property in properties if property.mutability == 'readonly' %}
    {{ property.declaration_prefix }} void {{ property.setterName }}({{ property.argType }} value) {{- property.declaration_suffix }};
{%- endfor %}


{%- for group in properties|groupby('access') %}
{{ group.grouper }}:
    {%- for property in group.list %}
    {{ property.type }} {{ property.varName }}{% if property.value is defined %} = {{ property.value }}{% endif %};
    {%- endfor %}
{%- endfor %}
};

#endif // {{ include_guard }}

